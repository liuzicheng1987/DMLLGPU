import os

os.chdir("/home/patrick/Dropbox/Programs/NeuralNetworkGPU/")
flist = os.listdir("/home/patrick/Dropbox/Programs/NeuralNetworkGPU/")

for f in flist:
    text = open(f, "rb").read()
    
    text = text.replace("init_hidden_node", "init_hidden_node")
    text = text.replace("init_output_node", "init_output_node")  
    
    text = text.replace("get_hidden_nodes_fed_into_me_length", "get_hidden_nodes_fed_into_me_length")
    text = text.replace("get_hidden_nodes_fed_into_me", "get_hidden_nodes_fed_into_me")
    text = text.replace("get_input_nodes_fed_into_me_length", "get_input_nodes_fed_into_me_length")
    text = text.replace("get_input_nodes_fed_into_me", "get_input_nodes_fed_into_me")
    text = text.replace("get_nodes_i_am_fed_into_length", "get_nodes_i_am_fed_into_length")
    text = text.replace("get_nodes_i_am_fed_into", "get_nodes_i_am_fed_into")
    
    text = text.replace("calc_output_sparse", "calc_output_sparse")
    text = text.replace("calc_dLdw_sparse", "calc_dLdw_sparse")
    text = text.replace("calc_dLdInput_sparse", "calc_dLdInput_sparse")
    text = text.replace("calc_delta_sparse", "calc_delta_sparse")
    text = text.replace("calc_delta_output_node_sparse", "calc_delta_output_node_sparse")



    text = text.replace("get_input_nodes_fed_into_me", "get_input_nodes_fed_into_me")



    text = text.replace("init_hidden_node", "init_hidden_node")
    text = text.replace("init_hidden_node", "init_hidden_node")
    text = text.replace("init_hidden_node", "init_hidden_node")  
    text = text.replace("init_hidden_node", "init_hidden_node")
    text = text.replace("init_hidden_node", "init_hidden_node")  
